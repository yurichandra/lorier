---
openapi: 3.0.1
info:
  title: Lorier API V1
  version: v1
paths:
  "/consignees":
    get:
      summary: Get all consignees
      tags:
      - Consignees
      parameters:
      - name: query
        description: Query to filter consignee by name
        in: query
        schema:
          type: string
          properties:
            query:
              type: string
      responses:
        '200':
          description: OK
          content: {}
    post:
      summary: Store a new consignee
      tags:
      - Consignees
      parameters: []
      responses:
        '201':
          description: created
          content: {}
        '422':
          description: unprocessable_entity
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                phone_number:
                  type: string
                province_id:
                  type: integer
                city_id:
                  type: integer
                district_id:
                  type: integer
              required:
              - name
              - address
              - phone_number
              - province_id
              - city_id
              - district_id
  "/consignees/{id}":
    get:
      summary: Get a consignee
      tags:
      - Consignees
      parameters:
      - name: consginee_id
        in: path
        required: true
      responses:
        '200':
          description: OK
          content: {}
        '404':
          description: Resource not found
          content: {}
  "/shipments":
    post:
      summary: store a new shipment
      tags:
      - Shipments
      parameters: []
      responses:
        '201':
          description: created
          content: {}
        '422':
          description: unprocessable_entity
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                shipping_notes:
                  type: string
                shipping_date:
                  type: string
                service_code:
                  type: string
                shipper_id:
                  type: integer
                consignee_id:
                  type: integer
                shipment_items:
                  type: array
                  items:
                    type: object
                    properties:
                      description:
                        type: string
                      width:
                        type: number
                      height:
                        type: number
                      length:
                        type: number
              required:
              - shipping_notes
              - shipping_date
              - service_code
              - shipper_id
              - consignee_id
              - shipment_items
  "/shippers":
    get:
      summary: Get all shippers
      tags:
      - Shippers
      parameters:
      - name: query
        description: Filter shipper by name
        in: query
        schema:
          type: string
          properties:
            query:
              type: string
      responses:
        '200':
          description: OK
          content: {}
    post:
      summary: Store a new shipper
      tags:
      - Shippers
      parameters: []
      responses:
        '201':
          description: created
          content: {}
        '422':
          description: unprocessable_entity
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                phone_number:
                  type: string
                province_id:
                  type: integer
                city_id:
                  type: integer
                district_id:
                  type: integer
              required:
              - name
              - address
              - phone_number
              - province_id
              - city_id
              - district_id
  "/shippers/{id}":
    get:
      summary: Find a shipper by ID
      tags:
      - Shippers
      parameters:
      - name: shipper_id
        in: path
        required: true
      responses:
        '200':
          description: OK
          content: {}
        '404':
          description: Resource not found
          content: {}
  "/stations":
    get:
      summary: Get all stations
      tags:
      - Stations
      parameters:
      - name: includes
        description: 'Resource that can be included on response. Available: province,
          city, district'
        in: query
        schema:
          type: string
          properties:
            includes:
              type: string
      responses:
        '200':
          description: OK
          content: {}
    post:
      summary: Create a station
      tags:
      - Stations
      parameters: []
      responses:
        '201':
          description: created
          content: {}
        '422':
          description: unprocessable_entity
          content: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                address:
                  type: string
                phone_number:
                  type: string
                province_id:
                  type: integer
                city_id:
                  type: integer
                district_id:
                  type: integer
              required:
              - name
              - address
              - phone_number
              - province_id
              - city_id
              - district_id
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
